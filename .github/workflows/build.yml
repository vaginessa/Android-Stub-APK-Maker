name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'gradle/**'
      - '*.gradle'
  workflow_dispatch:
    inputs:
      package:
          type: string
          description: "Package ID"
          required: true
          default: "com.android"
      app_name:
          type: string
          description: "App name"
          required: false
          default: ""
      versioncode:
          type: string
          description: "App version code"
          required: true
          default: 1
      versionname:
          type: string
          description: "App version name"
          required: false
          default: ""
      minsdk:
          type: choise
          description: "minSdk"
          options: ["1", "2", "3" ,"4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34"]
          required: true
          default: "24"
      targetsdk:
          type: choise
          description: "targetSdk"
          options: ["1", "2", "3" ,"4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34"]
          required: true
          default: "34"
      sign:
          type: boolean
          description: Custom signing
          required: true
          default: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: ${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build with Gradle
        run: |
          # Set package ID
          if [ "${{ inputs.package }}" != "com.android" ]; then
            sed -i -e 's/com.android/${{ inputs.package }}/g' app/build.gradle
          fi
          # Set minSdk
          if [ ${{ inputs.minsdk }} != 24 ]; then
            sed -i -e 's/24/${{ inputs.minsdk }}/g' app/build.gradle
          fi
          # Set targetSdk
          if [ ${{ inputs.targetsdk }} != 34 ]; then
            sed -i -e 's/tSdk\ 34/tSdk\ ${{ inputs.targetsdk }}/g' app/build.gradle
          fi
          # Set versionCode
          if [ ${{ inputs.versioncode }} > 1 ]; then
            sed -i -e 's/\ 1/\ ${{ inputs.versioncode }}/g' app/build.gradle
          fi
          # Set versionName
          if [ -n "${{ inputs.versionname }}" ]; then
            sed -i -e 's/\"\"/\"${{ inputs.versionname }}\"/g' app/build.gradle
          fi
          # Set app name
          if [ "${{ inputs.app_name }}" != "" ]; then
            sed -i -e "s/\"\"/\"${{ inputs.app_name }}\"" app/src/main/AndroidManifest.xml
          fi
          # Set signature
          if [ "${{ inputs.sign }}" == "true" ]; then
            if ! echo "${{ secrets.STORE_FILE }}" | base64 -d > app/release.jks; then
              echo -e "ERROR!\nPlease set the variables correctly.\n"
              echo "Please see the README for details."
              exit 1
            fi
            export STORE_PASSWORD="${{ secrets.STORE_PASSWORD }}"
            export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
            export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
          fi
          # Build
          ./gradlew assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.package }}-${{ inputs.versioncode }}
          path: app/build/outputs/apk/release/app-release.apk
